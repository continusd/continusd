image: registry.gitlab.com/jonashackt/aws-kubectl-tkn:0.21.0

.before_script_template:
  before_script:
    - mkdir ~/.kube
    - echo "$EKSKUBECONFIG" > ~/.kube/config
    - echo "--- Testdrive connection to cluster"
    - kubectl cluster-info
    - kubectl get nodes
    - echo "--- Test if Tekton pipelines are set up"
    - kubectl get pods --namespace tekton-pipelines
    - echo "--- Change permission for kubecfg"
    - chmod +x kubecfg

stages:
  - validate
  - deploy

# ============================================ MR Pipelines Start ============================================
# MR will be blocked if any pipeline failed/ no pipeline run

# 1. Check if any main file is changed
# - Fail the pipeline if any main file is changed (user should not have rights to modify main files)
check-files-changed:
  stage: validate
  rules: 
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - ./*jsonnet
        - continuousd/*
        - k8s/*
        - tekton/*
  script:
  - echo "You do not have the rights to modify files outside of your namespace :("
  - exit 1

# Check if any file in other users namespace has been changed
# - OK if no other namespace files has been changed
validate-other-namespace:
  stage: validate
  variables:
    NAMESPACE_DIR: '$GITLAB_USER_LOGIN/'
    OWN_CHANGED: 'false'
    OTHER_CHANGED: 'false'
  rules:
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    changes:
      - namespaces/nusfriends1/**/*
  script:
    - echo "FILES IN OTHER NAMESPACES CHANGED"
    - exit 1

# Check if any file in user namespace is changed
# - Ok if user only changed the files inside own's namespace
# - Skip this pipeline if there are other files changed (outside user's namespace)
# validate-own-namespace:
#   stage: validate
#   variables:
#     NAMESPACE_DIR: 'namespaces/$GITLAB_USER_LOGIN'
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#       changes:
#         - namespaces/$GITLAB_USER_LOGIN/**/*
#   script:
#     - echo "Files in $NAMESPACE_DIR changed"
    # - yum install -y -q git
    # - git diff-tree --name-only --no-commit-id -r $CI_MERGE_REQUEST_TARGET_BRANCH_SHA -r $CI_COMMIT_SHA
  
# ============================================= MR Pipelines End =============================================

deploy-app:
  extends: .before_script_template
  stage: deploy
  rules:
    # Only run pipeline if the code is committed/ merged into the master branch 
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    # This will deploy into k8s cluster directly
    # - echo "--- Deploy nusfriends1 to k8s"
    # - ./kubecfg update nusfriends1.jsonnet

    # This will deploy into k8s cluster via Tekton Pipeline
    - echo "--- Deloy nusfriends to k8s via Tekton Pipeline"
    - ./kubecfg --ext-str "CI_COMMIT_SHA=$CI_COMMIT_SHA" update test_pipeline.jsonnet

    # Display logs from Tekton Pipeline
    # in nusfriends-1 namespace
    - echo "--- Show Tekton PipelineRun logs"
    - kubectl logs -n nusfriends-1 --selector=tekton.dev/pipelineRun=$CI_COMMIT_SHA -f --all-containers --max-log-requests=8 --pod-running-timeout=45s --previous=false --ignore-errors=true

    # Hardcoded show external IP 
    - echo "--- Your App is Running on IP ADDRESS..."
    - kubectl get services -n nusfriends-1 nus-jira-app-service --output jsonpath='{.status.loadBalancer.ingress[0].ip}'
